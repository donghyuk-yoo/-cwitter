[{"E:\\web\\React\\cwitter\\src\\routes\\Auth.js":"1","E:\\web\\React\\cwitter\\src\\routes\\Home.js":"2","E:\\web\\React\\cwitter\\src\\fBase.js":"3","E:\\web\\React\\cwitter\\src\\components\\Router.js":"4","E:\\web\\React\\cwitter\\src\\components\\App.js":"5","E:\\web\\React\\cwitter\\src\\index.js":"6","E:\\web\\React\\cwitter\\src\\components\\Navigation.js":"7","E:\\web\\React\\cwitter\\src\\routes\\Profile.js":"8","E:\\web\\React\\cwitter\\src\\fbase.js":"9","E:\\web\\React\\cwitter\\src\\components\\Nweet.js":"10"},{"size":2424,"mtime":1614352153389,"results":"11","hashOfConfig":"12"},{"size":2597,"mtime":1614686482113,"results":"13","hashOfConfig":"12"},{"size":735,"mtime":1614351991205,"results":"14","hashOfConfig":"12"},{"size":915,"mtime":1614684641949,"results":"15","hashOfConfig":"12"},{"size":1040,"mtime":1614686802336,"results":"16","hashOfConfig":"12"},{"size":216,"mtime":1614352173270,"results":"17","hashOfConfig":"12"},{"size":303,"mtime":1614351529723,"results":"18","hashOfConfig":"12"},{"size":1107,"mtime":1614684671128,"results":"19","hashOfConfig":"12"},{"size":680,"mtime":1614685611679,"results":"20","hashOfConfig":"12"},{"size":1810,"mtime":1614352205821,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ar4mqm",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"E:\\web\\React\\cwitter\\src\\routes\\Auth.js",[],"E:\\web\\React\\cwitter\\src\\routes\\Home.js",["43"],"E:\\web\\React\\cwitter\\src\\fBase.js",[],"E:\\web\\React\\cwitter\\src\\components\\Router.js",[],"E:\\web\\React\\cwitter\\src\\components\\App.js",[],"E:\\web\\React\\cwitter\\src\\index.js",[],"E:\\web\\React\\cwitter\\src\\components\\Navigation.js",[],"E:\\web\\React\\cwitter\\src\\routes\\Profile.js",["44"],"E:\\web\\React\\cwitter\\src\\fbase.js",[],"E:\\web\\React\\cwitter\\src\\components\\Nweet.js",["45"],"import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n",{"ruleId":"46","severity":1,"message":"47","line":74,"column":13,"nodeType":"48","endLine":74,"endColumn":64},{"ruleId":"49","severity":1,"message":"50","line":5,"column":1,"nodeType":"51","endLine":45,"endColumn":3},{"ruleId":"46","severity":1,"message":"47","line":48,"column":13,"nodeType":"48","endLine":48,"endColumn":76},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]